{"ast":null,"code":"var _jsxFileName = \"/Users/micahpeterson/Desktop/P365-Admin-React/ClientApp/src/components/RadioOption.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RadioOption = ({\n  height,\n  label,\n  id,\n  children\n}) => {\n  _s();\n\n  const reduxState = useSelector(state => state.accentColor);\n  const [isHovered, setIsHovered] = useState(false);\n  const [color, setColor] = useState('transparent');\n  const [isChecked, setIsChecked] = useState(false);\n  const [onClickColor, setClickColor] = useState('transparent');\n\n  let handleMouseEnter = e => {\n    setIsHovered(true);\n    setColor(reduxState);\n  };\n\n  let handleMouseLeave = e => {\n    setIsHovered(false);\n    setColor('transparent');\n  };\n\n  let handleClick = e => {\n    // setIsChecked(!isChecked);\n    console.log(isChecked); // if(isChecked === true){\n    //   setClickColor(reduxState)\n    // }\n    // else\n    // {\n    //   setClickColor('purple')\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-option-container\",\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      style: {\n        border: `2px solid ${color}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: 'none'\n        },\n        type: \"radio\",\n        id: id,\n        name: \"test1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-radio\",\n        onClick: handleClick,\n        for: id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hole-punch-container\",\n          style: {\n            height: height\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ugly-hole-punch\",\n            style: {\n              border: `2px solid ${color}`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"innermost-circle\",\n              style: {\n                backgroundColor: `${onClickColor}`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), children, label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RadioOption, \"HY4INAUmrLxzruItL/un3pk4rH4=\", false, function () {\n  return [useSelector];\n});\n\n_c = RadioOption;\nexport default RadioOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioOption\");","map":{"version":3,"sources":["/Users/micahpeterson/Desktop/P365-Admin-React/ClientApp/src/components/RadioOption.js"],"names":["useState","useSelector","RadioOption","height","label","id","children","reduxState","state","accentColor","isHovered","setIsHovered","color","setColor","isChecked","setIsChecked","onClickColor","setClickColor","handleMouseEnter","e","handleMouseLeave","handleClick","console","log","border","display","backgroundColor"],"mappings":";;;AAAA,SAAQA,QAAR,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,EAAhB;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AAAA;;AACrD,QAAMC,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA9B;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,aAAD,CAAlC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,YAAD,EAAeC,aAAf,IAAgCjB,QAAQ,CAAC,aAAD,CAA9C;;AAEA,MAAIkB,gBAAgB,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAACN,UAAD,CAAR;AACH,GAHD;;AAIA,MAAIa,gBAAgB,GAAID,CAAD,IAAO;AAC1BR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACH,GAHD;;AAIA,MAAIQ,WAAW,GAAIF,CAAD,IAAO;AACrB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ,EAFqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAVD;;AAWA,sBACE;AAAA,2BACQ;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAwC,MAAA,YAAY,EAAEI,gBAAtD;AAAwE,MAAA,YAAY,EAAEE,gBAAtF;AAAwG,MAAA,KAAK,EAAE;AAACI,QAAAA,MAAM,EAAG,aAAYZ,KAAM;AAA5B,OAA/G;AAAA,8BACQ;AAAO,QAAA,KAAK,EAAE;AAACa,UAAAA,OAAO,EAAC;AAAT,SAAd;AAAgC,QAAA,IAAI,EAAC,OAArC;AAA6C,QAAA,EAAE,EAAEpB,EAAjD;AAAqD,QAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,OAAO,EAAEgB,WAAxC;AAAqD,QAAA,GAAG,EAAEhB,EAA1D;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAsC,UAAA,KAAK,EAAE;AAACF,YAAAA,MAAM,EAACA;AAAR,WAA7C;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAiC,YAAA,KAAK,EAAE;AAACqB,cAAAA,MAAM,EAAE,aAAYZ,KAAM;AAA3B,aAAxC;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAkC,cAAA,KAAK,EAAE;AAACc,gBAAAA,eAAe,EAAG,GAAEV,YAAa;AAAlC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOKV,QAPL,EAQKF,KARL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADR,mBADF;AAiBD,CA5CD;;GAAMF,W;UACeD,W;;;KADfC,W;AA8CN,eAAeA,WAAf","sourcesContent":["import {useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst RadioOption = ({height, label, id, children}) => {\n  const reduxState = useSelector(state => state.accentColor);\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [color, setColor] = useState('transparent');\n  const [isChecked, setIsChecked] = useState(false);\n  const [onClickColor, setClickColor] = useState('transparent');\n\n  let handleMouseEnter = (e) => {\n      setIsHovered(true);\n      setColor(reduxState);\n  }\n  let handleMouseLeave = (e) => {\n      setIsHovered(false);\n      setColor('transparent');\n  }\n  let handleClick = (e) => {\n      // setIsChecked(!isChecked);\n      console.log(isChecked)\n      // if(isChecked === true){\n      //   setClickColor(reduxState)\n      // }\n      // else\n      // {\n      //   setClickColor('purple')\n      // }\n  }\n  return (\n    <>\n            <div className=\"radio-option-container\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} style={{border: `2px solid ${color}`}}>\n                    <input style={{display:'none'}} type=\"radio\" id={id} name=\"test1\"/>\n                    <label className=\"label-radio\" onClick={handleClick} for={id}>\n\n                        <div className=\"hole-punch-container\" style={{height:height}}>\n                            <div className=\"ugly-hole-punch\" style={{border:`2px solid ${color}`}}>\n                                <div className=\"innermost-circle\" style={{backgroundColor: `${onClickColor}`}} ></div>\n                            </div>\n                        </div>\n                        {children}\n                        {label}\n                    </label>\n                </div>\n    </>\n  )\n}\n\nexport default RadioOption\n"]},"metadata":{},"sourceType":"module"}