{"ast":null,"code":"var _jsxFileName = \"/Users/micahpeterson/Desktop/P365ReactAdministration/src/components/ToggleSwitch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ToggleSwitch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToggleSwitch = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n\n  const handleClick = el => {\n    setToggle(!toggle);\n  };\n\n  const genText = toggle => {\n    let jsx;\n\n    if (toggle === false) {\n      jsx = /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"NO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    class: \"switch\",\n    for: \"checkbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"slider round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), genText(toggle)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToggleSwitch, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n\n_c = ToggleSwitch;\nexport default ToggleSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"sources":["/Users/micahpeterson/Desktop/P365ReactAdministration/src/components/ToggleSwitch.js"],"names":["React","useState","ToggleSwitch","props","toggle","setToggle","handleClick","el","genText","jsx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMK,WAAW,GAAIC,EAAD,IAAQ;AAExBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AAEH,GAJD;;AAMA,QAAMI,OAAO,GAAIJ,MAAD,IAAY;AAExB,QAAIK,GAAJ;;AACA,QAAGL,MAAM,KAAK,KAAd,EACA;AACIK,MAAAA,GAAG,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AACH;;AAED,wBAAQ,qCAAR;AAGH,GAXD;;AAaA,sBACI;AAAO,IAAA,KAAK,EAAC,QAAb;AAAwB,IAAA,GAAG,EAAC,UAA5B;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAqC,MAAA,OAAO,EAAEH;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKE,OAAO,CAACJ,MAAD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA9BD;;GAAMF,Y;;KAAAA,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./ToggleSwitch.css\";\n\nconst ToggleSwitch = (props) => {\n\n    const [toggle, setToggle] = useState(false);\n\n    const handleClick = (el) => {\n\n        setToggle(!toggle);\n\n    }\n\n    const genText = (toggle) => {\n\n        let jsx;\n        if(toggle === false)\n        {\n            jsx = <span>NO</span>\n        }\n\n        return (<>\n            \n        </>);\n    }\n\n    return (\n        <label class=\"switch\"   for=\"checkbox\">\n            <input type=\"checkbox\" id=\"checkbox\" onClick={handleClick}/>\n            <div class=\"slider round\" ></div>\n            {genText(toggle)}\n        </label>\n    );\n}\n\nexport default ToggleSwitch;\n"]},"metadata":{},"sourceType":"module"}