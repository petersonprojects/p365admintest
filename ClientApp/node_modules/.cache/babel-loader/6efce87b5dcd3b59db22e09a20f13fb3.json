{"ast":null,"code":"import * as React from \"react\";\nimport { css } from \"./css\";\nimport \"./BundledIcon.scss\";\n\nconst getIconName = Icon => {\n  const displayName = Icon.displayName ? Icon.displayName.endsWith(\"Filled\") ? Icon.displayName.substring(0, Icon.displayName.length - 6) : Icon.displayName.substring(0, Icon.displayName.length - 7) : '';\n  return displayName;\n};\n\nconst bundleIcon = (Icon1, Icon2) => {\n  const displayName = getIconName(Icon1);\n\n  const Component = props => {\n    const {\n      className,\n      primaryFill = 'currentColor',\n      filled\n    } = props;\n    /** Checks to see what order the icons were passed in */\n\n    const isReg = Icon1.displayName ? Icon1.displayName.endsWith(\"Regular\") ? true : false : false;\n    const containerProps = props['aria-label'] || props['aria-labelledby'] || props.title ? {\n      role: 'img'\n    } : {\n      ['aria-hidden']: true\n    };\n    return filled ? isReg ? React.createElement(React.Fragment, null, React.createElement(\"span\", Object.assign({}, props, containerProps, {\n      className: css(\"bundled-icon-span-filled\", className)\n    }), React.createElement(Icon1, {\n      className: \"regular\",\n      primaryFill: primaryFill\n    }), React.createElement(Icon2, {\n      className: \"filled\",\n      primaryFill: primaryFill\n    }))) : React.createElement(React.Fragment, null, React.createElement(\"span\", Object.assign({}, props, containerProps, {\n      className: css(\"bundled-icon-span-filled\", className)\n    }), React.createElement(Icon1, {\n      className: \"filled\",\n      primaryFill: primaryFill\n    }), React.createElement(Icon2, {\n      className: \"regular\",\n      primaryFill: primaryFill\n    }))) : isReg ? React.createElement(React.Fragment, null, React.createElement(\"span\", Object.assign({}, props, containerProps, {\n      className: css(\"bundled-icon-span\", className)\n    }), React.createElement(Icon1, {\n      className: \"regular\",\n      primaryFill: primaryFill\n    }), React.createElement(Icon2, {\n      className: \"filled\",\n      primaryFill: primaryFill\n    }))) : React.createElement(React.Fragment, null, React.createElement(\"span\", Object.assign({}, props, containerProps, {\n      className: css(\"bundled-icon-span\", className)\n    }), React.createElement(Icon1, {\n      className: \"filled\",\n      primaryFill: primaryFill\n    }), React.createElement(Icon2, {\n      className: \"regular\",\n      primaryFill: primaryFill\n    })));\n  };\n\n  Component.displayName = displayName;\n  return Component;\n};\n\nexport default bundleIcon;","map":{"version":3,"sources":["/Users/micahpeterson/Desktop/P365ReactAdministration/node_modules/@fluentui/react-icons/lib/esm/utils/bundleIcon.js"],"names":["React","css","getIconName","Icon","displayName","endsWith","substring","length","bundleIcon","Icon1","Icon2","Component","props","className","primaryFill","filled","isReg","containerProps","title","role","createElement","Fragment","Object","assign"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAO,oBAAP;;AACA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1B,QAAMC,WAAW,GAAGD,IAAI,CAACC,WAAL,GAAmBD,IAAI,CAACC,WAAL,CAAiBC,QAAjB,CAA0B,QAA1B,IAAsCF,IAAI,CAACC,WAAL,CAAiBE,SAAjB,CAA2B,CAA3B,EAA8BH,IAAI,CAACC,WAAL,CAAiBG,MAAjB,GAA0B,CAAxD,CAAtC,GAAmGJ,IAAI,CAACC,WAAL,CAAiBE,SAAjB,CAA2B,CAA3B,EAA8BH,IAAI,CAACC,WAAL,CAAiBG,MAAjB,GAA0B,CAAxD,CAAtH,GAAmL,EAAvM;AACA,SAAOH,WAAP;AACH,CAHD;;AAIA,MAAMI,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,QAAMN,WAAW,GAAGF,WAAW,CAACO,KAAD,CAA/B;;AACA,QAAME,SAAS,GAAIC,KAAD,IAAW;AACzB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,WAAW,GAAG,cAA3B;AAA2CC,MAAAA;AAA3C,QAAsDH,KAA5D;AACA;;AACA,UAAMI,KAAK,GAAGP,KAAK,CAACL,WAAN,GAAoBK,KAAK,CAACL,WAAN,CAAkBC,QAAlB,CAA2B,SAA3B,IAAwC,IAAxC,GAA+C,KAAnE,GAA2E,KAAzF;AACA,UAAMY,cAAc,GAAGL,KAAK,CAAC,YAAD,CAAL,IAAuBA,KAAK,CAAC,iBAAD,CAA5B,IAAmDA,KAAK,CAACM,KAAzD,GACjB;AACEC,MAAAA,IAAI,EAAE;AADR,KADiB,GAIjB;AACE,OAAC,aAAD,GAAiB;AADnB,KAJN;AAOA,WAAQJ,MAAM,GACVC,KAAK,GACDhB,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACqB,QAA1B,EAAoC,IAApC,EACIrB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4BE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyBK,cAAzB,EAAyC;AAAEJ,MAAAA,SAAS,EAAEZ,GAAG,CAAC,0BAAD,EAA6BY,SAA7B;AAAhB,KAAzC,CAA5B,EACIb,KAAK,CAACoB,aAAN,CAAoBX,KAApB,EAA2B;AAAEI,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,WAAW,EAAEA;AAArC,KAA3B,CADJ,EAEId,KAAK,CAACoB,aAAN,CAAoBV,KAApB,EAA2B;AAAEG,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,WAAW,EAAEA;AAApC,KAA3B,CAFJ,CADJ,CADC,GAMGd,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACqB,QAA1B,EAAoC,IAApC,EACIrB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4BE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyBK,cAAzB,EAAyC;AAAEJ,MAAAA,SAAS,EAAEZ,GAAG,CAAC,0BAAD,EAA6BY,SAA7B;AAAhB,KAAzC,CAA5B,EACIb,KAAK,CAACoB,aAAN,CAAoBX,KAApB,EAA2B;AAAEI,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,WAAW,EAAEA;AAApC,KAA3B,CADJ,EAEId,KAAK,CAACoB,aAAN,CAAoBV,KAApB,EAA2B;AAAEG,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,WAAW,EAAEA;AAArC,KAA3B,CAFJ,CADJ,CAPE,GAYNE,KAAK,GACDhB,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACqB,QAA1B,EAAoC,IAApC,EACIrB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4BE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyBK,cAAzB,EAAyC;AAAEJ,MAAAA,SAAS,EAAEZ,GAAG,CAAC,mBAAD,EAAsBY,SAAtB;AAAhB,KAAzC,CAA5B,EACIb,KAAK,CAACoB,aAAN,CAAoBX,KAApB,EAA2B;AAAEI,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,WAAW,EAAEA;AAArC,KAA3B,CADJ,EAEId,KAAK,CAACoB,aAAN,CAAoBV,KAApB,EAA2B;AAAEG,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,WAAW,EAAEA;AAApC,KAA3B,CAFJ,CADJ,CADC,GAMGd,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACqB,QAA1B,EAAoC,IAApC,EACIrB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4BE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyBK,cAAzB,EAAyC;AAAEJ,MAAAA,SAAS,EAAEZ,GAAG,CAAC,mBAAD,EAAsBY,SAAtB;AAAhB,KAAzC,CAA5B,EACIb,KAAK,CAACoB,aAAN,CAAoBX,KAApB,EAA2B;AAAEI,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,WAAW,EAAEA;AAApC,KAA3B,CADJ,EAEId,KAAK,CAACoB,aAAN,CAAoBV,KAApB,EAA2B;AAAEG,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,WAAW,EAAEA;AAArC,KAA3B,CAFJ,CADJ,CAlBhB;AAsBH,GAjCD;;AAkCAH,EAAAA,SAAS,CAACP,WAAV,GAAwBA,WAAxB;AACA,SAAOO,SAAP;AACH,CAtCD;;AAuCA,eAAeH,UAAf","sourcesContent":["import * as React from \"react\";\nimport { css } from \"./css\";\nimport \"./BundledIcon.scss\";\nconst getIconName = (Icon) => {\n    const displayName = Icon.displayName ? Icon.displayName.endsWith(\"Filled\") ? Icon.displayName.substring(0, Icon.displayName.length - 6) : Icon.displayName.substring(0, Icon.displayName.length - 7) : '';\n    return displayName;\n};\nconst bundleIcon = (Icon1, Icon2) => {\n    const displayName = getIconName(Icon1);\n    const Component = (props) => {\n        const { className, primaryFill = 'currentColor', filled } = props;\n        /** Checks to see what order the icons were passed in */\n        const isReg = Icon1.displayName ? Icon1.displayName.endsWith(\"Regular\") ? true : false : false;\n        const containerProps = props['aria-label'] || props['aria-labelledby'] || props.title\n            ? {\n                role: 'img',\n            }\n            : {\n                ['aria-hidden']: true,\n            };\n        return (filled ?\n            isReg ?\n                React.createElement(React.Fragment, null,\n                    React.createElement(\"span\", Object.assign({}, props, containerProps, { className: css(\"bundled-icon-span-filled\", className) }),\n                        React.createElement(Icon1, { className: \"regular\", primaryFill: primaryFill }),\n                        React.createElement(Icon2, { className: \"filled\", primaryFill: primaryFill })))\n                :\n                    React.createElement(React.Fragment, null,\n                        React.createElement(\"span\", Object.assign({}, props, containerProps, { className: css(\"bundled-icon-span-filled\", className) }),\n                            React.createElement(Icon1, { className: \"filled\", primaryFill: primaryFill }),\n                            React.createElement(Icon2, { className: \"regular\", primaryFill: primaryFill })))\n            :\n                isReg ?\n                    React.createElement(React.Fragment, null,\n                        React.createElement(\"span\", Object.assign({}, props, containerProps, { className: css(\"bundled-icon-span\", className) }),\n                            React.createElement(Icon1, { className: \"regular\", primaryFill: primaryFill }),\n                            React.createElement(Icon2, { className: \"filled\", primaryFill: primaryFill })))\n                    :\n                        React.createElement(React.Fragment, null,\n                            React.createElement(\"span\", Object.assign({}, props, containerProps, { className: css(\"bundled-icon-span\", className) }),\n                                React.createElement(Icon1, { className: \"filled\", primaryFill: primaryFill }),\n                                React.createElement(Icon2, { className: \"regular\", primaryFill: primaryFill }))));\n    };\n    Component.displayName = displayName;\n    return Component;\n};\nexport default bundleIcon;\n"]},"metadata":{},"sourceType":"module"}