{"ast":null,"code":"var _jsxFileName = \"/Users/micahpeterson/Desktop/P365ReactAdministration/src/components/DraggableList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './DraggableList.css';\nimport styled from 'styled-components';\nimport { ArrowBidirectionalUpDown24Regular } from \"@fluentui/react-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst iconStyleProps = {\n  primaryFill: \"blue\"\n};\nlet array = [{\n  id: '1',\n  title: 'Curb Your Enthusiasm',\n  thumb: '/path/to/icon'\n}, {\n  id: '2',\n  title: 'Eddie Izzard',\n  thumb: '/path/to/icon'\n}, {\n  id: '3',\n  title: 'Bill & Teds Excellent Adventure',\n  thumb: '/path/to/icon'\n}, {\n  id: '4',\n  title: 'Potato Skins',\n  thumb: '/path/to/icon'\n}];\n\nconst DraggableList = props => {\n  _s();\n\n  const TaskList = styled.div`\n        padding: 8px;\n        width: 35%;\n    `;\n  const PlaceHolder = styled.div`\n        \n    `;\n  const Item = styled.div`\n        padding: 8px;\n        border-bottom: 1px solid lightgray;\n        border-radius: 5px;\n        background-color:${props => props.isDragging ? 'transparent' : 'white'};\n        margin-top: 2px;\n        display:flex;\n        justify-content:space-between;\n    `;\n  const [list, updateList] = useState(array);\n\n  let onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const items = Array.from(list);\n    const [reorderedItem] = items.splice(source.index, 1);\n    items.splice(destination.index, 0, reorderedItem);\n    updateList(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Overrated Things List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result),\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"drop-id-1\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskList, {\n          className: \"myList\",\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          children: [list.map(({\n            id,\n            title,\n            thumb\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Item, { ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                isDragging: snapshot.isDragging,\n                children: [index + 1 + \". \" + title, /*#__PURE__*/_jsxDEV(ArrowBidirectionalUpDown24Regular, { ...iconStyleProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 38\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(PlaceHolder, {\n            isDragging: snapshot.isDragging,\n            children: provided.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DraggableList, \"0JQdKTOxIAOrqbn9ZBVVn59nZZo=\");\n\n_c = DraggableList;\nexport default DraggableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DraggableList\");","map":{"version":3,"sources":["/Users/micahpeterson/Desktop/P365ReactAdministration/src/components/DraggableList.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","styled","ArrowBidirectionalUpDown24Regular","iconStyleProps","primaryFill","array","id","title","thumb","DraggableList","props","TaskList","div","PlaceHolder","Item","isDragging","list","updateList","onDragEnd","result","destination","source","draggableId","droppableId","index","items","Array","from","reorderedItem","splice","marginTop","provided","snapshot","innerRef","draggableProps","map","dragHandleProps","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,qBAApD;AACA,OAAO,qBAAP;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,iCADF,QAIK,uBAJL;;;AAMA,MAAMC,cAAiC,GAAG;AACtCC,EAAAA,WAAW,EAAE;AADyB,CAA1C;AAIA,IAAIC,KAAK,GAAG,CACR;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,sBAFX;AAGIC,EAAAA,KAAK,EAAE;AAHX,CADQ,EAMR;AACIF,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,KAAK,EAAE;AAHX,CANQ,EAWR;AACIF,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,iCAFX;AAGIC,EAAAA,KAAK,EAAE;AAHX,CAXQ,EAgBR;AACIF,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,KAAK,EAAE;AAHX,CAhBQ,CAAZ;;AAyBA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,QAAQ,GAAGV,MAAM,CAACW,GAAI;AAChC;AACA;AACA,KAHI;AAIA,QAAMC,WAAW,GAAGZ,MAAM,CAACW,GAAI;AACnC;AACA,KAFI;AAGA,QAAME,IAAI,GAAGb,MAAM,CAACW,GAAI;AAC5B;AACA;AACA;AACA,2BAA2BF,KAAK,IAAKA,KAAK,CAACK,UAAN,GAAmB,aAAnB,GAAkC,OAAS;AAChF;AACA;AACA;AACA,KARI;AAUA,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBpB,QAAQ,CAACQ,KAAD,CAAnC;;AAIA,MAAIa,SAAS,GAAIC,MAAD,IAAY;AAExB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA,MAAd;AAAsBC,MAAAA;AAAtB,QAAqCH,MAA3C;;AAEA,QAAG,CAACC,WAAJ,EAAgB;AACZ;AACH;;AAED,QAAGA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACHH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAD7B,EAGA;AACI;AACH;;AAED,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWX,IAAX,CAAd;AACA,UAAM,CAACY,aAAD,IAAkBH,KAAK,CAACI,MAAN,CAAaR,MAAM,CAACG,KAApB,EAA2B,CAA3B,CAAxB;AACAC,IAAAA,KAAK,CAACI,MAAN,CAAaT,WAAW,CAACI,KAAzB,EAAgC,CAAhC,EAAmCI,aAAnC;AAEAX,IAAAA,UAAU,CAACQ,KAAD,CAAV;AAEH,GArBD;;AAwBF,sBACF;AAAA,4BACM;AAAI,MAAA,KAAK,EAAE;AAACK,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAGI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAGX,MAAD,IAAUD,SAAS,CAACC,MAAD,CAA/C;AAAA,6BACQ,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,WAAvB;AAAA,kBAEK,CAACY,QAAD,EAAWC,QAAX,kBAEG,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,QAApB;AAA8B,UAAA,GAAG,EAAED,QAAQ,CAACE,QAA5C;AAAA,aAA0DF,QAAQ,CAACG,cAAnE;AAAA,qBACSlB,IAAI,CAACmB,GAAL,CAAS,CAAC;AAAC7B,YAAAA,EAAD;AAAKC,YAAAA,KAAL;AAAYC,YAAAA;AAAZ,WAAD,EAAqBgB,KAArB,KAA+B;AACrC,gCACK,QAAC,SAAD;AACC,cAAA,WAAW,EAAElB,EADd;AAEC,cAAA,KAAK,EAAEkB,KAFR;AAAA,wBAII,CAACO,QAAD,EAAWC,QAAX,kBAEG,QAAC,IAAD,OAEQD,QAAQ,CAACG,cAFjB;AAAA,mBAGQH,QAAQ,CAACK,eAHjB;AAII,gBAAA,GAAG,EAAEL,QAAQ,CAACE,QAJlB;AAKI,gBAAA,UAAU,EAAED,QAAQ,CAACjB,UALzB;AAAA,2BAOKS,KAAK,GAAC,CAAN,GAAS,IAAT,GAAgBjB,KAPrB,eAQI,QAAC,iCAAD,OAAuCJ;AAAvC;AAAA;AAAA;AAAA;AAAA,wBARJ;AAAA,iBACSG,EADT;AAAA;AAAA;AAAA;AAAA;AANP;AAAA;AAAA;AAAA;AAAA,oBADL;AAqBH,WAtBA,CADT,eAwBQ,QAAC,WAAD;AACI,YAAA,UAAU,EAAE0B,QAAQ,CAACjB,UADzB;AAAA,sBAGCgB,QAAQ,CAACM;AAHV;AAAA;AAAA;AAAA;AAAA,kBAxBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADE;AA6CD,CA5FD;;GAAM5B,a;;KAAAA,a;AA8FN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\nimport './DraggableList.css';\n\nimport styled from 'styled-components';\nimport { \n  ArrowBidirectionalUpDown24Regular,\n \n} \nfrom \"@fluentui/react-icons\";\n\nconst iconStyleProps: IFluentIconsProps = {\n    primaryFill: \"blue\",\n};\n\nlet array = [\n    {\n        id: '1',\n        title: 'Curb Your Enthusiasm',\n        thumb: '/path/to/icon'\n    },\n    {\n        id: '2',\n        title: 'Eddie Izzard',\n        thumb: '/path/to/icon'\n    },\n    {\n        id: '3',\n        title: 'Bill & Teds Excellent Adventure',\n        thumb: '/path/to/icon'\n    },\n    {\n        id: '4',\n        title: 'Potato Skins',\n        thumb: '/path/to/icon'\n    }\n];\n\n\n\nconst DraggableList = (props) => {\n\n    const TaskList = styled.div`\n        padding: 8px;\n        width: 35%;\n    `;\n    const PlaceHolder = styled.div`\n        \n    `;\n    const Item = styled.div`\n        padding: 8px;\n        border-bottom: 1px solid lightgray;\n        border-radius: 5px;\n        background-color:${props => (props.isDragging ? 'transparent': 'white')};\n        margin-top: 2px;\n        display:flex;\n        justify-content:space-between;\n    `;\n\n    const [list, updateList] = useState(array);\n\n\n\n    let onDragEnd = (result) => {\n\n        const {destination, source, draggableId} = result;\n\n        if(!destination){\n            return;\n        }\n\n        if(destination.droppableId === source.droppableId &&\n        destination.index === source.index\n        )\n        {\n            return;\n        }\n\n        const items = Array.from(list);\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n\n        updateList(items);\n\n    }\n\n\n  return (\n<>\n      <h5 style={{marginTop: '10px'}}>Overrated Things List</h5>\n\n    <DragDropContext onDragEnd={(result)=>onDragEnd(result)}>\n            <Droppable droppableId=\"drop-id-1\">\n\n                {(provided, snapshot)=>(\n\n                    <TaskList className=\"myList\"  ref={provided.innerRef} {...provided.draggableProps} >\n                            {list.map(({id, title, thumb}, index) => {\n                                return (\n                                     <Draggable\n                                      draggableId={id} \n                                      index={index}\n                                      >\n                                        {(provided, snapshot)=>(\n                                        \n                                            <Item \n                                                key={id} \n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                ref={provided.innerRef}\n                                                isDragging={snapshot.isDragging}\n                                            >\n                                                {index+1 +\". \" + title}\n                                                <ArrowBidirectionalUpDown24Regular {...iconStyleProps}/>\n                                            </Item>\n                                        \n                                        )}\n                                    </Draggable>\n                                );\n                            })}\n                            <PlaceHolder\n                                isDragging={snapshot.isDragging}\n                            >\n                            {provided.placeholder}\n                            </PlaceHolder>\n                    </TaskList>\n\n                )}\n            </Droppable>\n    </DragDropContext>\n    </>\n  )\n}\n\nexport default DraggableList;\n"]},"metadata":{},"sourceType":"module"}